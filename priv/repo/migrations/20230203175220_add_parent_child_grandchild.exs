defmodule Gateflow.Project.Repo.Migrations.AddParentChildGrandchild do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:parents, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :name, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:grand_children, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :name, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :parent_id, :uuid
    end

    create table(:children, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
    end

    alter table(:grand_children) do
      modify :parent_id,
             references(:children,
               column: :id,
               prefix: "public",
               name: "grand_children_parent_id_fkey",
               type: :uuid
             )
    end

    alter table(:children) do
      add :child_id, :uuid, null: false
      add :name, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :parent_id,
          references(:parents,
            column: :id,
            name: "children_parent_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:children, "children_parent_id_fkey")

    alter table(:children) do
      remove :parent_id
      remove :inserted_at
      remove :name
      remove :child_id
    end

    drop constraint(:grand_children, "grand_children_parent_id_fkey")

    alter table(:grand_children) do
      modify :parent_id, :uuid
    end

    drop table(:children)

    drop table(:grand_children)

    drop table(:parents)
  end
end